name: Build and Run [OMIT_DEPRECATED = true]

# Run every time a new commit pushed or for pull requests
on:
  push:
  pull_request:

env:
  SIMULATION: native
  OMIT_DEPRECATED: true
  ENABLE_UNIT_TESTS: true
  CTEST_OUTPUT_ON_FAILURE: true
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  #Checks for duplicate actions. Skips push actions if there is a matching or duplicate pull-request action. 
  check-for-duplicates:
    runs-on: ubuntu-latest
    
    # Map a step output to a job output
    outputs:
        should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
    
  build-run-test:
    name: Build, Run, Test
    needs: check-for-duplicates
    if: ${{ needs.check-for-duplicates.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        buildtype: [debug, release]

    # Set the type of machine to run on
    env:
      BUILDTYPE: ${{ matrix.buildtype }}
    
    steps:
      - name: Cache Source and Build
        id: cache-src-bld
        uses: actions/cache@v2
        with:
          path: /home/runner/work/${{ env.REPO_NAME }}/${{ env.REPO_NAME }}/*
          key: build-${{ github.run_number }}-${{ matrix.buildtype }}-${{ matrix.os }}
      
      - name: Checkout bundle
        uses: actions/checkout@v2
        with:
          repository: nasa/cFS
          submodules: true 

      - name: Checkout bundle
        uses: actions/checkout@v2
        with:
          path: apps/cf
          
      - name: Check versions
        run: git submodule
        
      - name: Add cf app
        run: |
          sed -i '7i CFE_APP, cf, CF_AppMain, CF, 80, 16384, 0x0, 0; \n' cfe/cmake/sample_defs/cpu1_cfe_es_startup.scr
          sed -i -e 's|SET(cpu1_APPLIST ci_lab to_lab sch_lab)| SET(cpu1_APPLIST ci_lab to_lab sch_lab cf) |g' cfe/cmake/sample_defs/targets.cmake 
          
      - name: Set up for build
        run: |
          cp ./cfe/cmake/Makefile.sample Makefile
          cp -r ./cfe/cmake/sample_defs sample_defs
      - name: Prep Build
        run: make prep 
          
      - name: Make Install
        run: make install
      
      - name: Run cFS
        run: |
          ./core-cpu1 > cFS_startup_cpu1.txt &
          sleep 30
          ../host/cmdUtil --endian=LE --pktid=0x1806 --cmdcode=2 --half=0x0002
        working-directory: ./build/exe/cpu1/

      - name: Archive cFS Startup Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cFS-startup-log-omit-deprecate-true
          path: ./build/exe/cpu1/cFS_startup_cpu1.txt

      - name: Check for cFS Warnings
        run: |
          if [[ -n $(grep -i "warn\|err\|fail" cFS_startup_cpu1.txt) ]]; then
                  echo "Must resolve warn|err|fail in cFS startup before submitting a pull request"
                  echo ""
                  grep -i 'warn\|err\|fail' cFS_startup_cpu1.txt
                  exit -1
          fi
        working-directory: ./build/exe/cpu1/

      - name: Install Dependencies
        run: sudo apt-get install lcov -y        
      
      - name: Run Tests
        run: make test

      - name: Check Coverage
        run: make lcov
  